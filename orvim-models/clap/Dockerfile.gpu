# Используем официальный базовый образ с поддержкой CUDA 12.1 и Ubuntu 22.04 для работы с GPU
FROM nvidia/cuda:12.1.0-devel-ubuntu22.04

# Настраиваем режим установки пакетов для предотвращения появления запросов в процессе установки
ENV DEBIAN_FRONTEND=noninteractive

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем файл с зависимостями в контейнер
COPY requirements_gpu.txt /requirements.txt

# Обновляем список пакетов и устанавливаем Python и pip
RUN apt-get update && \
    apt-get install -y python3 python3-pip && \
    pip install --upgrade pip  # Обновляем pip до последней версии

# Устанавливаем библиотеку nexaai с поддержкой CUDA и пакеты из requirements_gpu.txt
RUN CMAKE_ARGS="-DGGML_CUDA=ON -DSD_CUBLAS=ON" pip install nexaai --prefer-binary --index-url https://nexaai.github.io/nexa-sdk/whl/cu124 --extra-index-url https://pypi.org/simple --no-cache-dir
RUN pip install -r /requirements.txt  # Устанавливаем зависимости из requirements_gpu.txt

# Открываем порт 80 для доступа извне контейнера
EXPOSE 80

# Определяем переменные окружения для настройки приложения
ENV PORT=80           # Порт, на котором приложение будет слушать запросы
ENV HOST=0.0.0.0      # Доступность извне по указанному адресу
ENV DEVICE="cuda:0"   # Указание использовать первую GPU (CUDA)

# Копируем исходный код приложения в рабочую директорию контейнера
COPY app_gpu /app

# Указываем команду для запуска приложения при старте контейнера
CMD ["python3", "/app/app.py"]
